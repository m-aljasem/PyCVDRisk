[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cvd-risk-calculator"
version = "0.1.0"
description = "Production-grade Python package for cardiovascular disease risk calculation"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "CVD Risk Calculator Contributors"}
]
keywords = [
    "cardiovascular",
    "risk-assessment",
    "clinical-decision-support",
    "epidemiology",
    "public-health",
    "score2",
    "framingham",
    "ascvd",
    "qrisk3"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.5.0",
    "scipy>=1.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.7.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "ipython>=8.14.0",
    "jupyter>=1.0.0",
    "ipywidgets>=8.1.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "nbsphinx>=0.9.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]
performance = [
    "numba>=0.58.0",
    "joblib>=1.3.0",
    "dask>=2023.7.0",
    "memory-profiler>=0.61.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/cvd-risk-calculator"
Documentation = "https://cvd-risk-calculator.readthedocs.io"
Repository = "https://github.com/yourusername/cvd-risk-calculator"
Issues = "https://github.com/yourusername/cvd-risk-calculator/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/cvd_risk_calculator"]

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["ARG"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
follow_imports = "normal"
ignore_missing_imports = false

[[tool.mypy.overrides]]
module = [
    "numba.*",
    "dask.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/cvd_risk_calculator",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=70",  # Will increase to 95% as more tests are added
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance benchmarks",
    "validation: Validation against reference data",
]

[tool.coverage.run]
source = ["src/cvd_risk_calculator"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

